// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dkg/dkg.proto

package dkg // import "github.com/dedis/drand/protobuf/dkg"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import vss "github.com/dedis/drand/protobuf/crypto/share/vss"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// So that it makes a background compatibility when code are changed.
type RefreshDKG struct {
	DkgPacket            *DKGPacket   `protobuf:"bytes,1,opt,name=dkgPacket" json:"dkgPacket,omitempty"`
	DkgResponse          *DKGResponse `protobuf:"bytes,2,opt,name=dkgResponse" json:"dkgResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RefreshDKG) Reset()         { *m = RefreshDKG{} }
func (m *RefreshDKG) String() string { return proto.CompactTextString(m) }
func (*RefreshDKG) ProtoMessage()    {}
func (*RefreshDKG) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{0}
}
func (m *RefreshDKG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshDKG.Unmarshal(m, b)
}
func (m *RefreshDKG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshDKG.Marshal(b, m, deterministic)
}
func (dst *RefreshDKG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshDKG.Merge(dst, src)
}
func (m *RefreshDKG) XXX_Size() int {
	return xxx_messageInfo_RefreshDKG.Size(m)
}
func (m *RefreshDKG) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshDKG.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshDKG proto.InternalMessageInfo

func (m *RefreshDKG) GetDkgPacket() *DKGPacket {
	if m != nil {
		return m.DkgPacket
	}
	return nil
}

func (m *RefreshDKG) GetDkgResponse() *DKGResponse {
	if m != nil {
		return m.DkgResponse
	}
	return nil
}

type ResponseDKG struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseDKG) Reset()         { *m = ResponseDKG{} }
func (m *ResponseDKG) String() string { return proto.CompactTextString(m) }
func (*ResponseDKG) ProtoMessage()    {}
func (*ResponseDKG) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{1}
}
func (m *ResponseDKG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDKG.Unmarshal(m, b)
}
func (m *ResponseDKG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDKG.Marshal(b, m, deterministic)
}
func (dst *ResponseDKG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDKG.Merge(dst, src)
}
func (m *ResponseDKG) XXX_Size() int {
	return xxx_messageInfo_ResponseDKG.Size(m)
}
func (m *ResponseDKG) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDKG.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDKG proto.InternalMessageInfo

// DKGPacket is used by the nodes to run the dkg protocol before being able to
// generate randomness beacons.
type DKGPacket struct {
	Deal                 *Deal          `protobuf:"bytes,1,opt,name=deal" json:"deal,omitempty"`
	Response             *Response      `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	Justification        *Justification `protobuf:"bytes,3,opt,name=justification" json:"justification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DKGPacket) Reset()         { *m = DKGPacket{} }
func (m *DKGPacket) String() string { return proto.CompactTextString(m) }
func (*DKGPacket) ProtoMessage()    {}
func (*DKGPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{2}
}
func (m *DKGPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DKGPacket.Unmarshal(m, b)
}
func (m *DKGPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DKGPacket.Marshal(b, m, deterministic)
}
func (dst *DKGPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DKGPacket.Merge(dst, src)
}
func (m *DKGPacket) XXX_Size() int {
	return xxx_messageInfo_DKGPacket.Size(m)
}
func (m *DKGPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_DKGPacket.DiscardUnknown(m)
}

var xxx_messageInfo_DKGPacket proto.InternalMessageInfo

func (m *DKGPacket) GetDeal() *Deal {
	if m != nil {
		return m.Deal
	}
	return nil
}

func (m *DKGPacket) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *DKGPacket) GetJustification() *Justification {
	if m != nil {
		return m.Justification
	}
	return nil
}

type DKGResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DKGResponse) Reset()         { *m = DKGResponse{} }
func (m *DKGResponse) String() string { return proto.CompactTextString(m) }
func (*DKGResponse) ProtoMessage()    {}
func (*DKGResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{3}
}
func (m *DKGResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DKGResponse.Unmarshal(m, b)
}
func (m *DKGResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DKGResponse.Marshal(b, m, deterministic)
}
func (dst *DKGResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DKGResponse.Merge(dst, src)
}
func (m *DKGResponse) XXX_Size() int {
	return xxx_messageInfo_DKGResponse.Size(m)
}
func (m *DKGResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DKGResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DKGResponse proto.InternalMessageInfo

// Deal contains a share for a participant.
type Deal struct {
	// index of the dealer, the issuer of the share
	Index uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	// encrypted version of the deal
	Deal                 *vss.EncryptedDeal `protobuf:"bytes,2,opt,name=deal" json:"deal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Deal) Reset()         { *m = Deal{} }
func (m *Deal) String() string { return proto.CompactTextString(m) }
func (*Deal) ProtoMessage()    {}
func (*Deal) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{4}
}
func (m *Deal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deal.Unmarshal(m, b)
}
func (m *Deal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deal.Marshal(b, m, deterministic)
}
func (dst *Deal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deal.Merge(dst, src)
}
func (m *Deal) XXX_Size() int {
	return xxx_messageInfo_Deal.Size(m)
}
func (m *Deal) XXX_DiscardUnknown() {
	xxx_messageInfo_Deal.DiscardUnknown(m)
}

var xxx_messageInfo_Deal proto.InternalMessageInfo

func (m *Deal) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Deal) GetDeal() *vss.EncryptedDeal {
	if m != nil {
		return m.Deal
	}
	return nil
}

// Response holds the response that a participant broadcast after having
// received a deal.
type Response struct {
	// index of the dealer for which this response is for
	Index uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	// response from the participant which received a deal
	Response             *vss.Response `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Response) GetResponse() *vss.Response {
	if m != nil {
		return m.Response
	}
	return nil
}

// Justification holds the justification from a dealer after a participant
// issued a complaint response because of a supposedly invalid deal.
type Justification struct {
	// index of the dealer who is issuing this justification
	Index uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	// justification from the dealer
	Justification        *vss.Justification `protobuf:"bytes,2,opt,name=justification" json:"justification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Justification) Reset()         { *m = Justification{} }
func (m *Justification) String() string { return proto.CompactTextString(m) }
func (*Justification) ProtoMessage()    {}
func (*Justification) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkg_92ff556e5ee45887, []int{6}
}
func (m *Justification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Justification.Unmarshal(m, b)
}
func (m *Justification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Justification.Marshal(b, m, deterministic)
}
func (dst *Justification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Justification.Merge(dst, src)
}
func (m *Justification) XXX_Size() int {
	return xxx_messageInfo_Justification.Size(m)
}
func (m *Justification) XXX_DiscardUnknown() {
	xxx_messageInfo_Justification.DiscardUnknown(m)
}

var xxx_messageInfo_Justification proto.InternalMessageInfo

func (m *Justification) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Justification) GetJustification() *vss.Justification {
	if m != nil {
		return m.Justification
	}
	return nil
}

func init() {
	proto.RegisterType((*RefreshDKG)(nil), "dkg.RefreshDKG")
	proto.RegisterType((*ResponseDKG)(nil), "dkg.ResponseDKG")
	proto.RegisterType((*DKGPacket)(nil), "dkg.DKGPacket")
	proto.RegisterType((*DKGResponse)(nil), "dkg.DKGResponse")
	proto.RegisterType((*Deal)(nil), "dkg.Deal")
	proto.RegisterType((*Response)(nil), "dkg.Response")
	proto.RegisterType((*Justification)(nil), "dkg.Justification")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DkgClient is the client API for Dkg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DkgClient interface {
	Setup(ctx context.Context, in *DKGPacket, opts ...grpc.CallOption) (*DKGResponse, error)
	RenewDistKeyGen(ctx context.Context, in *RefreshDKG, opts ...grpc.CallOption) (*ResponseDKG, error)
}

type dkgClient struct {
	cc *grpc.ClientConn
}

func NewDkgClient(cc *grpc.ClientConn) DkgClient {
	return &dkgClient{cc}
}

func (c *dkgClient) Setup(ctx context.Context, in *DKGPacket, opts ...grpc.CallOption) (*DKGResponse, error) {
	out := new(DKGResponse)
	err := c.cc.Invoke(ctx, "/dkg.Dkg/Setup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkgClient) RenewDistKeyGen(ctx context.Context, in *RefreshDKG, opts ...grpc.CallOption) (*ResponseDKG, error) {
	out := new(ResponseDKG)
	err := c.cc.Invoke(ctx, "/dkg.Dkg/RenewDistKeyGen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DkgServer is the server API for Dkg service.
type DkgServer interface {
	Setup(context.Context, *DKGPacket) (*DKGResponse, error)
	RenewDistKeyGen(context.Context, *RefreshDKG) (*ResponseDKG, error)
}

func RegisterDkgServer(s *grpc.Server, srv DkgServer) {
	s.RegisterService(&_Dkg_serviceDesc, srv)
}

func _Dkg_Setup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DKGPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkgServer).Setup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dkg.Dkg/Setup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkgServer).Setup(ctx, req.(*DKGPacket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkg_RenewDistKeyGen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshDKG)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkgServer).RenewDistKeyGen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dkg.Dkg/RenewDistKeyGen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkgServer).RenewDistKeyGen(ctx, req.(*RefreshDKG))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dkg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dkg.Dkg",
	HandlerType: (*DkgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Setup",
			Handler:    _Dkg_Setup_Handler,
		},
		{
			MethodName: "RenewDistKeyGen",
			Handler:    _Dkg_RenewDistKeyGen_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dkg/dkg.proto",
}

func init() { proto.RegisterFile("dkg/dkg.proto", fileDescriptor_dkg_92ff556e5ee45887) }

var fileDescriptor_dkg_92ff556e5ee45887 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x5d, 0x4b, 0xf3, 0x30,
	0x14, 0xc7, 0xd9, 0xdb, 0xc3, 0x76, 0x46, 0x9f, 0x49, 0xf0, 0x62, 0x0c, 0x04, 0xa9, 0x28, 0x0e,
	0x64, 0x85, 0xe9, 0x85, 0xd7, 0x52, 0x29, 0xd8, 0x1b, 0x89, 0x77, 0xde, 0x48, 0xd7, 0x9c, 0x76,
	0x35, 0x33, 0x2d, 0x4d, 0xaa, 0xee, 0x53, 0xf8, 0x95, 0x25, 0x69, 0xbb, 0x75, 0xce, 0x79, 0x51,
	0x68, 0x4e, 0x7e, 0xf9, 0x9f, 0xff, 0x79, 0x01, 0x8b, 0xf1, 0xd8, 0x61, 0x3c, 0x9e, 0x65, 0x79,
	0xaa, 0x52, 0xd2, 0x61, 0x3c, 0x9e, 0x4c, 0xc2, 0x7c, 0x9d, 0xa9, 0xd4, 0x91, 0xcb, 0x20, 0x47,
	0xe7, 0x5d, 0x4a, 0xfd, 0x95, 0x80, 0x2d, 0x00, 0x28, 0x46, 0x39, 0xca, 0xa5, 0xeb, 0x7b, 0xe4,
	0x0a, 0x06, 0x8c, 0xc7, 0x8f, 0x41, 0xc8, 0x51, 0x8d, 0x5b, 0xa7, 0xad, 0xcb, 0xe1, 0xfc, 0xff,
	0x4c, 0xab, 0xb9, 0xbe, 0x57, 0x46, 0xe9, 0x16, 0x20, 0x73, 0x18, 0x32, 0x1e, 0x53, 0x94, 0x59,
	0x2a, 0x24, 0x8e, 0xdb, 0x86, 0x3f, 0xaa, 0xf9, 0x3a, 0x4e, 0x9b, 0x90, 0x6d, 0xc1, 0xb0, 0xfe,
	0x77, 0x7d, 0xcf, 0xfe, 0x6a, 0xc1, 0x60, 0xa3, 0x4d, 0x4e, 0xa0, 0xcb, 0x30, 0x58, 0x55, 0x99,
	0x07, 0xa5, 0x12, 0x06, 0x2b, 0x6a, 0xc2, 0x64, 0x0a, 0xfd, 0x7c, 0x37, 0x99, 0x65, 0x90, 0x4d,
	0xa6, 0xcd, 0x35, 0xb9, 0x05, 0xeb, 0xb5, 0x90, 0x2a, 0x89, 0x92, 0x30, 0x50, 0x49, 0x2a, 0xc6,
	0x1d, 0xc3, 0x13, 0xc3, 0x3f, 0x34, 0x6f, 0xe8, 0x2e, 0xa8, 0x0d, 0x36, 0xcc, 0xdb, 0x2e, 0x74,
	0xb5, 0x03, 0x72, 0x0c, 0xbd, 0x44, 0x30, 0xfc, 0x34, 0xde, 0x2c, 0x5a, 0x1e, 0xc8, 0x45, 0x65,
	0xb8, 0x5d, 0xa9, 0xeb, 0xbe, 0xde, 0x0b, 0xd3, 0x6e, 0x64, 0x5b, 0xe7, 0xb6, 0x0f, 0xfd, 0x5a,
	0xf1, 0x80, 0xd2, 0x6f, 0xb5, 0x69, 0xb5, 0xfd, 0xda, 0xec, 0x17, 0xb0, 0x76, 0x2a, 0x38, 0xa0,
	0xb8, 0xd7, 0x82, 0xa6, 0xc9, 0xbf, 0x5a, 0x30, 0x8f, 0xa0, 0xe3, 0xf2, 0x98, 0x4c, 0xa1, 0xf7,
	0x84, 0xaa, 0xc8, 0xc8, 0x8f, 0x15, 0x98, 0xec, 0x8d, 0x98, 0xdc, 0xc0, 0x88, 0xa2, 0xc0, 0x0f,
	0x37, 0x91, 0xca, 0xc7, 0xb5, 0x87, 0x82, 0x8c, 0xaa, 0xd1, 0xd4, 0xbb, 0x55, 0xbd, 0x6a, 0x0c,
	0xff, 0xee, 0xfc, 0xf9, 0x2c, 0x4e, 0xd4, 0xb2, 0x58, 0xcc, 0xc2, 0xf4, 0xcd, 0x61, 0xc8, 0x12,
	0xe9, 0xb0, 0x3c, 0x10, 0xcc, 0x31, 0xbb, 0xb9, 0x28, 0x22, 0xbd, 0xc9, 0x8b, 0x7f, 0xe6, 0x74,
	0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x95, 0xf8, 0xee, 0xdb, 0x02, 0x00, 0x00,
}
